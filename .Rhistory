"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
ggplot(data = Q8,
aes(y = Percent)) +
geom_col() +
scale_x_discrete(labels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
scale_x_discrete(labels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
View(Q8)
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
scale_x_discrete(labels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"),
breaks = c(1,2,3,4,5,6,7,8,9,10,11))
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
geom_text(aes(label = Answers), vjust = -0.2)
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
geom_text(aes(label = as.character(Answers)), vjust = -0.2)
Q8$Answers <- as.character(Q8$Answers)
View(Q8)
Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
Percent <- as.numeric(c(25.0,
20.3,
28.9,
25.8,
49.2,
14.1,
17.2,
50.0,
27.3,
30.5,
4.7))
Q8 <- as.data.frame(cbind(Answers, Percent))
View(Q8)
Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
Answers
Q8 <- as.data.frame(cbind(Answers, Percent))
View(Q8)
Q8 <- as.data.frame(cbind(as.character(Answers), Percent))
View(Q8)
Q8$Answers <- as.character(Q8$Answers)
Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
Percent <- as.numeric(c(25.0,
20.3,
28.9,
25.8,
49.2,
14.1,
17.2,
50.0,
27.3,
30.5,
4.7))
Q8 <- as.data.frame(cbind(as.character(Answers), Percent))
View(Q8)
column.names(Q8)[1] <- Answers
colnames(Q8)[1] <- "Answers"
View(Q8)
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
geom_text(aes(label = as.character(Answers)), vjust = -0.2)
Percent <- as.numeric(c(25.0,
20.3,
28.9,
25.8,
49.2,
14.1,
17.2,
50.0,
27.3,
30.5,
4.7))
Q8 <- as.data.frame(Percent)
Q8$Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
View(Q8)
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
geom_text(aes(label = as.character(Answers)), vjust = -0.2)
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
theme_bw()
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
theme_bw(axis.text.x = element_text(angle = 90)))
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
labs(title = "Of the following, which three values are most important to you?")
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
labs(title = "Which Three Values are Most Important to You?")
ggplot(data = Q8,
aes(x = Answers,
y = Percent)) +
geom_col() +
labs(title = "Which Three Values are Most Important to You?") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
Percent <- as.numeric(c(14.8,
28.1,
36.7,
25.0,
37.5,
11.7,
16.4,
50.8,
30.5,
39.1,
4.7))
Q8 <- as.data.frame(Percent)
Q8$Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
Percent <- as.numeric(c(14.8,
28.1,
36.7,
25.0,
37.5,
11.7,
16.4,
50.8,
30.5,
39.1,
4.7))
Q9 <- as.data.frame(Percent)
Q9$Answers <- factor(c("Compassion",
"Vision",
"Analytic Rigor",
"Practicality",
"Integrity",
"Respect",
"Diversity",
"Equity",
"Collaboration",
"Excellence",
"Other"),
levels = c("Equity",
"Integrity",
"Excellence",
"Analytic Rigor",
"Collaboration",
"Practicality",
"Compassion",
"Vision",
"Diversity",
"Respect",
"Other"))
ggplot(data = Q9,
aes(x = Answers,
y = Percent)) +
geom_col() +
labs(title = "Which Three Values are Most Important to You?") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = Q9,
aes(x = Answers,
y = Percent)) +
geom_col() +
labs(title = "Which Three Values Ought to Guide our Work as a School Community?") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90))
install.packages("googlesheets")
library(googlesheets)
gs_ls()
gs_ls()
install.packages("googlesheets4")
library(googlesheets4)
gs_ls()
}
devtools::install_github("asheshrambachan/HonestDiD")
library(HonestDiD)
library(HonestDiD)
library("HonestDiD")
devtools::install_github("asheshrambachan/HonestDiD")
paste(round(0.00928, 4)*1000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
paste(round(0.00928/100, 4)*1000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
paste(round(0.00928/100, 4)*10000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
paste(round(0.00928/10, 4)*10000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
paste(round((0.00928/100)*10, 4)*1000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
paste(round(0.0477, 4)*10, " is the percent change in the average receipts following a local minimum wage")
paste(round((0.00719/100)*10, 4)*1000, " is the additional nonemployer establishments following a local minimum wage per 1000 members of the labor force")
install.packages("installr")
library(installr)
libpath()
.libPaths()
.libPaths("C:/Program Files/R/R-4.0.3/library")
.libPaths()
install.packages("installr")
install.packages("installr")
library(installr)
updateR()
# devtools::install_github('xuyiqing/fect')
library(collapse)
library(dplyr)
library(stargazer)
library(ggplot2)
library(ggtext)
library(scales)
library(fect)
devtools::install_github('xuyiqing/fect')
install.packages("devtools")
library(fect)
library(shiny)
library(dplyr)
library(data.table)
library(DT)
library(ggplot2)
library(ggforce)
library(janitor)
library(viridis)
library(hrbrthemes)
library(rsconnect)
#########################################
# load the data                         #
#########################################
load("shiny_app_oz_data_2015_2019.Rdata")
# Ben Glasner
# Quarterly Census of Employment and Wages Analysis Code
# Content:
# 1. Packages
# 2. Set Paths
# 3. Data Load
##################
###  Options   ###
##################
options(scipen=100000)
file_date <- "2022_qrt3"
Most_recent_qrt <- 2 # This can take the values from 1:4
##################
###  Library   ###
##################
library(dplyr)
library(ggplot2)
library(ggforce)
library(ggthemes)
library(gganimate)
library(ggrepel)
library(gifski)
library(ggmap)
library(sf)
library(scales)
library(plm)
library(blscrapeR)
#################
### Set paths ###
#################
if(Sys.info()[["user"]]=="bglasner"){
# Root folder
path_project <- "C:/Users/bglasner/Dropbox"
}
if(Sys.info()[["user"]]=="bngla"){
# Root folder
path_project <- "C:/Users/bngla/Dropbox"
}
if(Sys.info()[["user"]]=="Benjamin Glasner"){
# Root folder
path_project <- "C:/Users/Benjamin Glasner/Dropbox"
}
# Path to saved cohort data
path_qcew <- paste0(path_project,"/GitHub/QCEW")
setwd(path_qcew)
##################
###  Data Load ###
##################
########
# load County lat/long data for the animated US map
us_county_latlng <- read.csv("us_county_latlng.txt")
us_county_latlng <- us_county_latlng %>% rename("fips" = "fips_code")
########
# load a map of the US counties, but exclude Alaska and Hawaii for ease of presentation - Sorry for the exclusion. You are both great states.
counties <- tigris::counties(cb=TRUE,resolution = "500k", year = 2021)
counties <- counties %>% filter(as.numeric(as.character(STATEFP))<=56 & STATEFP!="02" & STATEFP!="15")
?tidycensus::get_estimates()
########
# Load county level population data.
# This was the easiest way I could think of building a populaiton API that would also let me/people load alternive county info easily
population_2018 <- tidycensus::get_estimates(geography = "county",
year = 2018,
product = "characteristics",
breakdown = c("SEX"),
breakdown_labels = TRUE) %>%
filter(SEX == "Both sexes") %>%
rename("area_fips" = "GEOID",
"population" = "value")
########
# Load county level population data.
# This was the easiest way I could think of building a populaiton API that would also let me/people load alternive county info easily
population_2021 <- tidycensus::get_estimates(geography = "county",
year = 2021,
product = "characteristics",
breakdown = c("SEX"),
breakdown_labels = TRUE) %>%
filter(SEX == "Both sexes") %>%
rename("area_fips" = "GEOID",
"population" = "value")
population_2020 <- tidycensus::get_estimates(geography = "county",
year = 2020,
product = "characteristics",
breakdown = c("SEX"),
breakdown_labels = TRUE) %>%
filter(SEX == "Both sexes") %>%
rename("area_fips" = "GEOID",
"population" = "value")
install.packages("tidycensus")
library(tidycensus)
get_estimates(
geography = "state",
year = 2021,
product = "population",
)
get_estimates(
geography = "state",
variables = "PPOPCHG_2021",
year = 2021
)
########
state_pop <-
get_estimates(
geography = "state",
year = 2021,
product = "population",
)
?get_estimates
########
state_pop <-
get_estimates(
geography = "state",
year = 2021,
product = "population",
)
########
state_pop <-
get_estimates(
geography = "state",
year = 2021,
product = "population",
breakdown = c("SEX"),
breakdown_labels = TRUE
)
########
state_pop <-
get_estimates(
geography = "state",
year = 2021,
product = "characteristics",
breakdown = c("SEX"),
breakdown_labels = TRUE
)
